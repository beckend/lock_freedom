initSidebarItems({"enum":[["Ordering","Atomic memory orderings"]],"fn":[["critical","Executes the given function as critical code. No deletions of new queues will start during this execution."],["later_drop","Adds the given pointer and drop function to the local deletion queue. If there is no critical code executing, the local queue items are deleted. The function is unsafe because pointers must be correctly dropped such as no \"use after free\" or \"double free\" happens."],["try_delete_local","Tries to delete the local queue items."]],"struct":[["HazardPtr","A hazard atomic pointer. It keeps a destructor with itself. The destruction and loading of this pointer uses the hazard API of this module. Because it (possibly later) calls the destructor on drop, be very careful. In general, if the pointer is consumed, you may want to fill the hazard pointer with `std::ptr::null_mut()` and check it on your drop."]]});